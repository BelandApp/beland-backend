name: CI / CD - Deploy to GCP

on:
  push:
    branches:
      - production
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Esto hace que use los secrets del environment elegido
    environment: ${{ github.event.inputs.environment }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
      GCLOUD_API_KEYFILE: ${{ secrets.GCLOUD_API_KEYFILE }}
      REPO_NAME: ${{ secrets.REPO_NAME }}
      REGION: ${{ secrets.REGION }} #us-east1

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Autenticación con GCP
        run: |
          echo "${GCLOUD_API_KEYFILE}" | base64 -d > gcloud-api-key.json
          gcloud auth activate-service-account --key-file gcloud-api-key.json
          gcloud config set project $GCLOUD_PROJECT

      - name: Build & Push Docker
        run: |
          export DOCKER_BUILDKIT=0
          PROJECT_NAME="beland-backend"
          SERVICE_NAME="beland-backend"

          docker build --no-cache --platform linux/amd64 -t $PROJECT_NAME -f Dockerfile .
          gcloud auth configure-docker $REGION-docker.pkg.dev

          IMAGE_NAME=$REGION-docker.pkg.dev/$GCLOUD_PROJECT/$REPO_NAME/$PROJECT_NAME
          docker tag $PROJECT_NAME $IMAGE_NAME
          docker push $IMAGE_NAME

          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "SERVICE_NAME=${SERVICE_NAME}" >> $GITHUB_ENV
      
      - name: Configurar variables de entorno desde JSON
        run: |
          ENV_FILE="${ENVIRONMENT}.json"
          echo "Cargando variables de $ENV_FILE"
          export $(jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' $ENV_FILE)
        shell: bash

      - name: Ejecutar migraciones
        run: |
          npm ci
          npm run build
          npm run migration:run
        env:
          DB_HOST: $DB_HOST
          DB_PORT: $DB_PORT
          DB_USERNAME: $DB_USERNAME
          DB_PASSWORD: $DB_PASSWORD
          DB_DATABASE: $DB_DATABASE

      - name: Deploy en Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE_NAME \
            --region=$REGION \
            --platform managed \
            --allow-unauthenticated \
            --env-vars-file=${ENVIRONMENT}.json
